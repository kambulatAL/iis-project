# Generated by Django 4.2.6 on 2023-10-14 19:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='category_subcategory', to='events.category')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_id', models.AutoField(primary_key=True, serialize=False)),
                ('capacity', models.IntegerField()),
                ('ticket_price', models.IntegerField()),
                ('description', models.TextField(null=True)),
                ('photo', models.ImageField(upload_to='Photos/events/<django.db.models.fields.AutoField>/%y/%m/%d/')),
            ],
        ),
        migrations.CreateModel(
            name='RegisteredUser',
            fields=[
                ('login', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('surname', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=255)),
                ('phone_number', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Moderator', 'Moderator')], max_length=15)),
                ('worker', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='events.registereduser')),
            ],
        ),
        migrations.CreateModel(
            name='TicketPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('creation_time', models.TimeField(auto_now_add=True)),
                ('ticket_price', models.IntegerField()),
                ('accepted', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='events.registereduser')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_payment_event', to='events.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_payment_user', to='events.registereduser')),
            ],
        ),
        migrations.CreateModel(
            name='EventPlace',
            fields=[
                ('place_id', models.AutoField(primary_key=True, serialize=False)),
                ('city', models.CharField(max_length=100)),
                ('street', models.CharField(max_length=200)),
                ('house_number', models.CharField(max_length=10, null=True)),
                ('place_name', models.CharField(max_length=255, null=True)),
                ('description', models.TextField(null=True)),
                ('photo', models.ImageField(null=True, upload_to='Photos/places/<django.db.models.fields.AutoField>/%y/%m/%d/')),
                ('accepted', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_place_accepted', to='events.worker')),
                ('created', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_place_created', to='events.registereduser')),
            ],
        ),
        migrations.CreateModel(
            name='EventEstimation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimation', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('comment', models.TextField(null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_estimation_event', to='events.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_estimation_user', to='events.registereduser')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='accepted',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_accepted', to='events.worker'),
        ),
        migrations.AddField(
            model_name='event',
            name='category',
            field=models.ManyToManyField(to='events.category'),
        ),
        migrations.AddField(
            model_name='event',
            name='created',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_created', to='events.registereduser'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_place',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_event_place', to='events.eventplace'),
        ),
        migrations.AddField(
            model_name='event',
            name='registered_people',
            field=models.ManyToManyField(to='events.registereduser'),
        ),
        migrations.AddConstraint(
            model_name='ticketpayment',
            constraint=models.UniqueConstraint(fields=('event', 'user'), name='ticket_payment'),
        ),
        migrations.AddConstraint(
            model_name='eventestimation',
            constraint=models.UniqueConstraint(fields=('event', 'user'), name='event_estimation'),
        ),
    ]
